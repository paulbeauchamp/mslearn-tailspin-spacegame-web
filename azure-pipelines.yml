# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-18.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootdir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSDKVersion: '3.1.300'

#steps:
#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'dotnet build $(buildConfiguration)'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSDKVersion)'
  inputs: 
    packageType: sdk
    version: $(dotnetSDKVersion)

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootdir) --output $(wwwrootdir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run Gulp Tasks'

- script: 'echo "$(Build.definitionName), $(Build.BuildId), $(build.buildnumber)" > buildinfo.txt'
  displayName: 'Write Build Info'
  workingDirectory: $(wwwrootdir)

- task: DotNetCoreCLI@2
  displayName: 'restore Project Dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildconfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildconfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildconfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildconfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildconfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()